SET SERVEROUTPUT ON;

-- Drop existing tables (ignore error if they don't exist)
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "acc_ounts"';
EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "employ$ee"';
EXCEPTION WHEN OTHERS THEN NULL;
END;
/

-- Create Accounts Table
CREATE TABLE "acc_ounts" (
    "acc_id" NUMBER PRIMARY KEY,
    "acc_type" VARCHAR2(20),
    "balance" NUMBER
);

-- Create Employees Table
CREATE TABLE "employ$ee" (
    "emp_id" NUMBER PRIMARY KEY,
    "f_name" VARCHAR2(30),
    "l_name" VARCHAR2(30),
    "department" VARCHAR2(30),
    "salary" NUMBER,
    "performance_rating" VARCHAR2(10)
);

-- Insert Updated Account Data
INSERT INTO "acc_ounts" VALUES (201, 'savings', 8000);
INSERT INTO "acc_ounts" VALUES (202, 'savings', 12000);
INSERT INTO "acc_ounts" VALUES (203, 'current', 7000);
INSERT INTO "acc_ounts" VALUES (204, 'savings', 1000);

-- Insert Updated Employee Data
INSERT INTO "employ$ee" VALUES (5, 'Eva', 'Green', 'HR', 28000, 'B');
INSERT INTO "employ$ee" VALUES (6, 'Frank', 'Hill', 'Finance', 45000, 'A');
INSERT INTO "employ$ee" VALUES (7, 'Grace', 'Lee', 'HR', 31000, 'C');
INSERT INTO "employ$ee" VALUES (8, 'Henry', 'Wong', 'IT', 39000, 'A');

COMMIT;

-- Procedure: Apply Monthly Interest to Savings Accounts
CREATE OR REPLACE PROCEDURE ProcessMonthlyInterest IS
BEGIN
    FOR rec IN (
        SELECT "acc_id", "balance" FROM "acc_ounts" WHERE "acc_type" = 'savings'
    ) LOOP
        UPDATE "acc_ounts"
        SET "balance" = "balance" + ("balance" * 0.01)
        WHERE "acc_id" = rec."acc_id";

        DBMS_OUTPUT.PUT_LINE('Interest applied to Account ' || rec."acc_id");
    END LOOP;
END;
/

-- Procedure: Apply Bonus to Employees in a Department
CREATE OR REPLACE PROCEDURE UpdateEmployeeBonus (
    p_department IN VARCHAR2,
    p_bonus_pct IN NUMBER
) IS
BEGIN
    FOR rec IN (
        SELECT "emp_id", "salary" FROM "employ$ee" WHERE "department" = p_department
    ) LOOP
        UPDATE "employ$ee"
        SET "salary" = "salary" + ("salary" * (p_bonus_pct / 100))
        WHERE "emp_id" = rec."emp_id";

        DBMS_OUTPUT.PUT_LINE('Bonus applied to Employee ID ' || rec."emp_id");
    END LOOP;
END;
/

Procedure: Transfer Funds Between Accounts
CREATE OR REPLACE PROCEDURE TransferFunds (
    p_from_acc IN NUMBER,
    p_to_acc IN NUMBER,
    p_amount IN NUMBER
) IS
    v_balance NUMBER;
BEGIN
    SELECT "balance" INTO v_balance FROM "acc_ounts"
    WHERE "acc_id" = p_from_acc;

    IF v_balance < p_amount THEN
        DBMS_OUTPUT.PUT_LINE('Insufficient balance in account ' || p_from_acc);
        RETURN;
    END IF;

    -- Deduct from source
    UPDATE "acc_ounts"
    SET "balance" = "balance" - p_amount
    WHERE "acc_id" = p_from_acc;

    -- Add to target
    UPDATE "acc_ounts"
    SET "balance" = "balance" + p_amount
    WHERE "acc_id" = p_to_acc;

    DBMS_OUTPUT.PUT_LINE('Transferred ₹' || p_amount || ' from Account ' || p_from_acc || ' to ' || p_to_acc);
END;
/

-- Run the Procedures
BEGIN
 ProcessMonthlyInterest;
    UpdateEmployeeBonus('HR', 15);  -- Apply 15% bonus to HR employees
    TransferFunds(202, 204, 2000);  -- Transfer ₹2000 from acc 202 to acc 204
END;
/
